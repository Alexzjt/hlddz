{"version":3,"sources":["ddz-logo.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","Input","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","remainPoke","inputPoke","setState","value","tempString","JSON","stringify","array","parse","test","replace","toLowerCase","split","forEach","poke","some","d","message","error","init","_this2","react_default","a","createElement","className","src","require","id","badge","count","href","style","color","float","width","placeholder","enterButton","size","onSearch","submit","onPressEnter","allowClear","es_button","type","onClick","clear","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e216b7d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ddz-logo.6beab099.jpg\";","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Badge, Input, Button,message} from 'antd';\r\n\r\nconst Search = Input.Search;\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            remainPoke: [],\r\n            inputPoke: \"\"\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this.setState({\r\n            remainPoke: [0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1],\r\n            inputPoke: \"\"\r\n        });\r\n    }\r\n\r\n    submit(value) {\r\n        let tempString = JSON.stringify(this.state.remainPoke);\r\n        let array = JSON.parse(tempString);\r\n\r\n        while (/10/g.test(value)) {\r\n            value.replace(/10/, \"\");\r\n            array[10] -= 1;\r\n        }\r\n\r\n        value.toLowerCase().split(\"\").forEach(poke => {\r\n            switch (poke) {\r\n                case \"d\":\r\n                    array[15] -= 1;\r\n                    break;\r\n                case \"x\":\r\n                    array[14] -= 1;\r\n                    break;\r\n                case \"k\":\r\n                    array[13] -= 1;\r\n                    break;\r\n                case \"q\":\r\n                    array[12] -= 1;\r\n                    break;\r\n                case \"j\":\r\n                    array[11] -= 1;\r\n                    break;\r\n                case \"a\":\r\n                    array[1] -= 1;\r\n                    break;\r\n                default:\r\n                    array[poke] -= 1;\r\n            }\r\n        });\r\n\r\n        if (array.some(d=>d<0)){\r\n            message.error(\"你的输入有误，已重置系统\");\r\n            this.init();\r\n            return;\r\n        }\r\n        this.setState({\r\n            remainPoke: array,\r\n            inputPoke: \"\"\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.init();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <img src={require('./ddz-logo.jpg')} id={'logo'}/>\r\n                <div className=\"my-content\">\r\n                    <Badge count={this.state.remainPoke[15]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\" style={{color: '#ff9800'}}>王</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[14]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\" style={{color: 'lightslategrey'}}>王</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[2]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">2</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[1]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">A</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[13]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">K</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[12]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">Q</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[11]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">J</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[10]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">10</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[9]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">9</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[8]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">8</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[7]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">7</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[6]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">6</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[5]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">5</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[4]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">4</span>\r\n                    </Badge>\r\n                    <Badge count={this.state.remainPoke[3]}>\r\n                        <a href=\"#\" className=\"head-example\"/>\r\n                        <span className=\"poke\">3</span>\r\n                    </Badge>\r\n                    <br/><br/>\r\n                    <div>\r\n                        <Search\r\n                            style={{float: 'left', width: '90%'}}\r\n                            placeholder=\"输入手牌或对家打出的牌，d代表大王，x代表小王，不区分大小写\"\r\n                            enterButton=\"记录\"\r\n                            size=\"large\"\r\n                            onSearch={value => this.submit(value)}\r\n                            onPressEnter={value => this.submit(value)}\r\n                            allowClear\r\n                        />\r\n                        <Button type=\"danger\" style={{float: 'right'}} size={'large'}\r\n                                onClick={() => this.init()}>重置</Button>\r\n                        <br style={{clear: 'both'}}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}