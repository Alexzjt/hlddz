{"version":3,"sources":["ddz-logo.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","Input","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","remainPoke","inputPoke","setState","value","tempString","JSON","stringify","array","parse","test","replace","toLowerCase","split","forEach","poke","some","d","message","error","init","_this2","react_default","a","createElement","className","src","require","id","badge","count","href","style","color","float","width","placeholder","enterButton","size","onSearch","submit","onPressEnter","allowClear","es_button","type","onClick","clear","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd4e261f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ddz-logo.6beab099.jpg\";","import React, {Component} from 'react';\nimport './App.css';\nimport {Badge, Input, Button,message} from 'antd';\n\nconst Search = Input.Search;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            remainPoke: [],\n            inputPoke: \"\"\n        }\n    }\n\n    init() {\n        this.setState({\n            remainPoke: [0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1],\n            inputPoke: \"\"\n        });\n    }\n\n    submit(value) {\n        let tempString = JSON.stringify(this.state.remainPoke);\n        let array = JSON.parse(tempString);\n\n        while (/10/g.test(value)) {\n            value.replace(/10/, \"\");\n            array[10] -= 1;\n        }\n\n        value.toLowerCase().split(\"\").forEach(poke => {\n            switch (poke) {\n                case \"d\":\n                    array[15] -= 1;\n                    break;\n                case \"x\":\n                    array[14] -= 1;\n                    break;\n                case \"k\":\n                    array[13] -= 1;\n                    break;\n                case \"q\":\n                    array[12] -= 1;\n                    break;\n                case \"j\":\n                    array[11] -= 1;\n                    break;\n                case \"a\":\n                    array[1] -= 1;\n                    break;\n                default:\n                    array[poke] -= 1;\n            }\n        });\n\n        if (array.some(d=>d<0)){\n            message.error(\"你的输入有误，已重置系统\");\n            this.init();\n            return;\n        }\n        this.setState({\n            remainPoke: array,\n            inputPoke: \"\"\n        });\n    }\n\n    componentWillMount() {\n        this.init();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <img src={require('./ddz-logo.jpg')} id={'logo'}/>\n                <div className=\"my-content\">\n                    <Badge count={this.state.remainPoke[15]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\" style={{color: '#ff9800'}}>王</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[14]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\" style={{color: 'lightslategrey'}}>王</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[2]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">2</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[1]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">A</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[13]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">K</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[12]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">Q</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[11]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">J</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[10]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">10</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[9]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">9</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[8]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">8</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[7]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">7</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[6]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">6</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[5]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">5</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[4]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">4</span>\n                    </Badge>\n                    <Badge count={this.state.remainPoke[3]}>\n                        <a href=\"#\" className=\"head-example\"/>\n                        <span className=\"poke\">3</span>\n                    </Badge>\n                    <br/><br/>\n                    <div>\n                        <Search\n                            style={{float: 'left', width: '90%'}}\n                            placeholder=\"输入手牌或对家打出的牌，d代表大王，x代表小王，不区分大小写\"\n                            enterButton=\"记录\"\n                            size=\"large\"\n                            onSearch={value => this.submit(value)}\n                            onPressEnter={value => this.submit(value)}\n                            allowClear\n                        />\n                        <Button type=\"danger\" style={{float: 'right'}} size={'large'}\n                                onClick={() => this.init()}>重置</Button>\n                        <br style={{clear: 'both'}}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}